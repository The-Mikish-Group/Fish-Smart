@model Members.Models.SmartCatchProfile

@{
    ViewData["Title"] = "Fish-Smart Profile";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Header -->
            <div class="text-center mb-4">
                <h2 class="text-white mb-2">
                    <i class="bi bi-person-badge"></i> Fish-Smart Profile
                </h2>
                <p class="text-white mb-3">Welcome back, @Model.DisplayName!</p>
                <a asp-action="Edit" class="btn btn-primary">
                    <i class="bi bi-pencil"></i> Edit Profile
                </a>
            </div>

            <!-- Profile Information Row -->
            <div class="card mx-1 mb-4 mt-1 p-1 shadow">
                <div class="ms-2">
                    <h5 class="text-black my-2"><i class="bi bi-person-circle"></i> Profile Information</h5>
                    <div class="mb-2">
                        @if (Model.SubscriptionType != "Premium")
                        {
                            <a asp-action="Upgrade" class="btn btn-sm btn-warning rounded-2 shadow me-2">
                                <i class="bi bi-star"></i> Upgrade to Premium
                            </a>
                        }
                        <a asp-controller="FishingSession" asp-action="Create" class="btn btn-sm btn-success rounded-2 shadow">
                            <i class="bi bi-plus-circle"></i> Start Session
                        </a>
                    </div>
                </div>
                
                <div class="profile-info-vertical">
                    <div class="row g-2">
                        <div class="col-md-4">
                            <div class="profile-field">
                                <strong>Display Name:</strong> @Model.DisplayName
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="profile-field">
                                <strong>Subscription:</strong> 
                                @if (Model.SubscriptionType == "Premium")
                                {
                                    <span class="badge bg-warning text-dark"><i class="bi bi-star-fill"></i> Premium</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Free</span>
                                }
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="profile-field">
                                <strong>Member Since:</strong> @Model.CreatedAt.ToString("MMM yyyy")
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="profile-field">
                                <strong>Water Type:</strong> <span class="badge bg-info">@Model.PreferredWaterType</span>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.DefaultRegion))
                        {
                            <div class="col-md-4">
                                <div class="profile-field">
                                    <strong>Region:</strong> @Model.DefaultRegion
                                </div>
                            </div>
                        }
                        <div class="col-md-4">
                            <div class="profile-field">
                                <strong>Quick Stats:</strong> 
                                <span class="text-primary fw-bold">@Model.FishingSessions.Count</span> Sessions, 
                                <span class="text-success fw-bold">@Model.UserAvatars.Count</span> Avatars, 
                                <span class="text-warning fw-bold">@Model.CatchAlbums.Count</span> Albums
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="profile-field d-flex justify-content-between align-items-center">
                                <strong>Watermark:</strong>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="watermarkToggle" 
                                           @(Model.WatermarkEnabled ? "checked" : "") 
                                           onchange="toggleSetting('watermark', this.checked)">
                                    <label class="form-check-label" for="watermarkToggle">
                                        <span id="watermarkStatus">@(Model.WatermarkEnabled ? "On" : "Off")</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        @if (Model.SubscriptionType == "Premium")
                        {
                            <div class="col-md-4">
                                <div class="profile-field d-flex justify-content-between align-items-center">
                                    <strong>Voice:</strong>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="voiceToggle" 
                                               @(Model.VoiceActivationEnabled ? "checked" : "") 
                                               onchange="toggleSetting('voice', this.checked)">
                                        <label class="form-check-label" for="voiceToggle">
                                            <span id="voiceStatus">@(Model.VoiceActivationEnabled ? "On" : "Off")</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="profile-field d-flex justify-content-between align-items-center">
                                    <strong>Auto Location:</strong>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="autoLocationToggle" 
                                               @(Model.AutoLocationEnabled ? "checked" : "") 
                                               onchange="toggleSetting('autoLocation', this.checked)">
                                        <label class="form-check-label" for="autoLocationToggle">
                                            <span id="autoLocationStatus">@(Model.AutoLocationEnabled ? "On" : "Off")</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-4">
                                <div class="profile-field">
                                    <strong>Voice:</strong>
                                    <span class="badge bg-secondary"><i class="bi bi-lock"></i> Premium Only</span>
                                    <i class="bi bi-star text-warning" title="Premium Feature"></i>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="profile-field">
                                    <strong>Auto Location:</strong>
                                    <span class="badge bg-secondary"><i class="bi bi-lock"></i> Premium Only</span>
                                    <i class="bi bi-star text-warning" title="Premium Feature"></i>
                                </div>
                            </div>
                        }
                        <div class="col-12 text-center mt-2">
                            <a asp-action="Stats" class="btn btn-sm btn-info">
                                <i class="bi bi-bar-chart"></i> View Detailed Stats
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recent Sessions -->
            @if (Model.FishingSessions.Any())
            {
                <div class="card mx-1 mb-4 mt-1 p-1 shadow">
                    <div class="ms-2">
                        <h5 class="text-black my-2"><i class="bi bi-journal-plus"></i> Recent Sessions</h5>
                        <div class="mb-2">
                            <a asp-controller="FishingSession" asp-action="Index" class="btn btn-sm btn-primary">
                                View All
                            </a>
                        </div>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="w-100 mb-0" id="recentSessionsTable">
                            <thead>
                                <tr>
                                    <th class="text-nowrap"><i class="bi bi-eye"></i></th>
                                    <th class="text-nowrap">Date & Time</th>
                                    <th class="text-nowrap">Location</th>
                                    <th class="text-nowrap">Water Type</th>
                                    <th class="text-nowrap">Status</th>
                                    <th class="text-nowrap">Catches</th>
                                    <th class="text-nowrap text-center pe-2">Add Catch</th>
                                    <th class="text-nowrap text-center pe-2">Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int i = 0;
                                }
                                @foreach (var session in Model.FishingSessions.Take(5))
                                {
                                    <tr class="@((i++) % 2 == 0 ? "row-even" : "row-odd")">
                                        <td class="text-nowrap py-2 pe-2">
                                            <a asp-controller="FishingSession" asp-action="Details" asp-route-id="@session.Id" title="View Session Details">
                                                <i class="bi bi-eye text-primary"></i>
                                            </a>
                                        </td>
                                        <td class="text-nowrap py-2">
                                            <div class="fw-bold">@session.SessionDate.ToString("MMM dd, yyyy")</div>
                                            <small class="text-secondary">@session.SessionDate.ToString("h:mm tt")</small>
                                        </td>
                                        <td class="text-nowrap py-2">
                                            @if (!string.IsNullOrEmpty(session.LocationName))
                                            {
                                                <div>@session.LocationName</div>
                                            }
                                            else
                                            {
                                                <span class="text-secondary">No location</span>
                                            }
                                        </td>
                                        <td class="text-nowrap py-2">
                                            <span class="badge @(session.WaterType == "Salt" ? "bg-primary" : "bg-success")">
                                                <i class="bi bi-@(session.WaterType == "Salt" ? "water" : "droplet")"></i>
                                                @session.WaterType
                                            </span>
                                        </td>
                                        <td class="text-nowrap py-2">
                                            @if (session.IsCompleted)
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="bi bi-check-circle"></i> Completed
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-record-circle"></i> Active
                                                </span>
                                            }
                                        </td>
                                        <td class="text-nowrap py-2">
                                            <span class="fw-bold">@session.Catches.Count</span>
                                            <small class="text-secondary"> fish</small>
                                        </td>
                                        <td class="text-nowrap py-2 pe-2 text-center">
                                            @if (!session.IsCompleted)
                                            {
                                                <a asp-controller="FishingSession" asp-action="AddCatch" asp-route-sessionId="@session.Id" title="Add Catch">
                                                    <i class="bi bi-plus-circle text-success"></i>
                                                </a>
                                            }
                                            else
                                            {
                                                <i class="bi bi-plus-circle text-muted" title="Session completed"></i>
                                            }
                                        </td>
                                        <td class="text-nowrap py-2 pe-2 text-center">
                                            <a asp-controller="FishingSession" asp-action="Edit" asp-route-id="@session.Id" title="Edit Session">
                                                <i class="bi bi-pencil text-success"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @if (Model.FishingSessions.Count > 5)
                    {
                        <div class="text-center mt-2 mb-2">
                            <small class="text-muted">
                                Showing 5 of @Model.FishingSessions.Count sessions...
                                <a asp-controller="FishingSession" asp-action="Index" class="text-primary">View All</a>
                            </small>
                        </div>
                    }
                </div>
            }

            <!-- My Albums -->
            @if (Model.CatchAlbums.Any())
            {
                <div class="card mx-1 mb-4 mt-1 p-1 shadow">
                    <div class="ms-2">
                        <h5 class="text-black my-2"><i class="bi bi-collection"></i> My Albums</h5>
                        <div class="mb-2">
                            <a asp-controller="CatchAlbum" asp-action="Create" class="btn btn-sm btn-success">
                                <i class="bi bi-plus-circle"></i> New Album
                            </a>
                        </div>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="w-100 mb-0" id="myAlbumsTable">
                            <thead>
                                <tr>
                                    <th class="text-nowrap"><i class="bi bi-eye"></i></th>
                                    <th class="text-nowrap">Album Name</th>
                                    <th class="text-nowrap">Created</th>
                                    <th class="text-nowrap">Catches</th>
                                    <th class="text-nowrap">Privacy</th>
                                    <th class="text-nowrap">Cover Image</th>
                                    <th class="text-nowrap text-center pe-2">Edit</th>
                                    <th class="text-nowrap text-center pe-2">Delete</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int j = 0;
                                }
                                @foreach (var album in Model.CatchAlbums.Take(5))
                                {
                                    <tr class="@((j++) % 2 == 0 ? "row-even" : "row-odd")">
                                        <td class="text-nowrap py-2 pe-2">
                                            <a asp-controller="CatchAlbum" asp-action="Details" asp-route-id="@album.Id" title="View Album Details">
                                                <i class="bi bi-eye text-primary"></i>
                                            </a>
                                        </td>
                                        <td class="text-nowrap py-2">
                                            <div class="fw-bold">@album.Name</div>
                                            @if (!string.IsNullOrEmpty(album.Description) && album.Description.Length > 50)
                                            {
                                                <small class="text-secondary">@(album.Description.Substring(0, 50))...</small>
                                            }
                                            else if (!string.IsNullOrEmpty(album.Description))
                                            {
                                                <small class="text-secondary">@album.Description</small>
                                            }
                                        </td>
                                        <td class="text-nowrap py-2">
                                            <div>@album.CreatedAt.ToString("MMM dd, yyyy")</div>
                                            <small class="text-secondary">@album.CreatedAt.ToString("h:mm tt")</small>
                                        </td>
                                        <td class="text-nowrap py-2">
                                            <span class="fw-bold">@album.AlbumCatches.Count</span>
                                            <small class="text-secondary"> catch@(album.AlbumCatches.Count != 1 ? "es" : "")</small>
                                        </td>
                                        <td class="text-nowrap py-2">
                                            @if (album.IsPublic)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-globe"></i> Public
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="bi bi-lock"></i> Private
                                                </span>
                                            }
                                        </td>
                                        <td class="text-nowrap py-2">
                                            @if (!string.IsNullOrEmpty(album.CoverImageUrl))
                                            {
                                                <span class="badge bg-success">
                                                    <i class="bi bi-image"></i> Yes
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="bi bi-image"></i> No
                                                </span>
                                            }
                                        </td>
                                        <td class="text-nowrap py-2 pe-2 text-center">
                                            <a asp-controller="CatchAlbum" asp-action="Edit" asp-route-id="@album.Id" title="Edit Album">
                                                <i class="bi bi-pencil text-success"></i>
                                            </a>
                                        </td>
                                        <td class="text-nowrap py-2 pe-2 text-center">
                                            <a asp-controller="CatchAlbum" asp-action="Delete" asp-route-id="@album.Id" title="Delete Album">
                                                <i class="bi bi-trash text-danger"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @if (Model.CatchAlbums.Count > 5)
                    {
                        <div class="text-center mt-2 mb-2">
                            <small class="text-muted">
                                Showing 5 of @Model.CatchAlbums.Count albums...
                                <a asp-controller="CatchAlbum" asp-action="Index" class="text-primary">View All</a>
                            </small>
                        </div>
                    }
                </div>
            }
            
            <!-- Empty States for New Users -->
            @if (!Model.FishingSessions.Any())
            {
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="bi bi-journal-x text-white" style="font-size: 4rem;"></i>
                    </div>
                    <h4 class="text-white mb-3">No Fishing Sessions Yet!</h4>
                    <p class="text-white mb-4">
                        Start tracking your fishing adventures with Fish-Smart.<br>
                        Log your sessions, catches, and build your fishing history.
                    </p>
                    <a asp-controller="FishingSession" asp-action="Create" class="btn btn-primary btn-lg">
                        <i class="bi bi-plus-circle"></i> Start Your First Session
                    </a>
                </div>
            }
            
            @if (!Model.CatchAlbums.Any())
            {
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="bi bi-collection text-white" style="font-size: 4rem;"></i>
                    </div>
                    <h4 class="text-white mb-3">No Albums Created Yet!</h4>
                    <p class="text-white mb-4">
                        Organize your catches into albums to share your best moments.<br>
                        Create albums for different trips, species, or special occasions.
                    </p>
                    <a asp-controller="CatchAlbum" asp-action="Create" class="btn btn-success btn-lg">
                        <i class="bi bi-plus-circle"></i> Create Your First Album
                    </a>
                </div>
            }
            
            <!-- Quick Action Buttons for Experienced Users -->
            @if (Model.FishingSessions.Any() || Model.CatchAlbums.Any())
            {
                <div class="card mx-1 mb-4 mt-1 p-1 shadow">
                    <div class="card-body text-center">
                        <h6 class="card-title mb-3">Quick Actions</h6>
                        <div class="row gy-3">
                            <div class="col-md-4">
                                <a asp-controller="FishingSession" asp-action="Create" class="btn btn-primary w-100">
                                    <i class="bi bi-journal-plus"></i> Start Fishing Session
                                </a>
                            </div>
                            <div class="col-md-4">
                                <a asp-controller="CatchAlbum" asp-action="Create" class="btn btn-success w-100">
                                    <i class="bi bi-plus-circle"></i> Create Album
                                </a>
                            </div>
                            <div class="col-md-4">
                                <a asp-controller="FishSpecies" asp-action="Index" class="btn btn-info w-100">
                                    <i class="bi bi-collection"></i> Browse Fish Species
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050">
        <div class="toast show" role="alert" id="successToast" data-bs-autohide="true" data-bs-delay="4000">
            <div class="toast-header bg-success text-white">
                <i class="bi bi-check-circle me-2"></i>
                <strong class="me-auto">Success</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
                @TempData["Success"]
            </div>
        </div>
    </div>
}

<style>
    .card {
        transition: transform 0.2s ease-in-out;
        border: 1px solid #e3e6f0;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.12);
        }

    .toast {
        animation: slideIn 0.3s ease-out;
    }

    @@keyframes slideIn {
        from { transform: translateX(100%); }
        to { transform: translateX(0); }
    }

    /* Table styling to match Sessions view */
    #recentSessionsTable, #myAlbumsTable {
        border-collapse: collapse;
    }

    #recentSessionsTable th, #myAlbumsTable th {
        background-color: #f8f9fa;
        border-bottom: 2px solid #dee2e6;
        padding: 8px 6px;
        font-size: 0.875rem;
        font-weight: 600;
    }

    .row-even {
        background-color: #f8f9fa;
    }

    .row-odd {
        background-color: #ffffff;
    }

    #recentSessionsTable td, #myAlbumsTable td {
        border-bottom: 1px solid #dee2e6;
        font-size: 0.875rem;
    }

    #recentSessionsTable tr:hover, #myAlbumsTable tr:hover {
        background-color: #e3f2fd !important;
    }

    /* Vertical Profile Information styling */
    .profile-info-vertical .profile-field {
        background-color: #f8f9fa;
        padding: 0.5rem;
        border-radius: 0.25rem;
        font-size: 0.875rem;
        border: 1px solid #dee2e6;
        margin-bottom: 0.25rem;
    }

    .profile-info-vertical .badge {
        font-size: 0.75rem;
        padding: 0.25rem 0.5rem;
    }

    
</style>

<script>
async function toggleSetting(setting, enabled) {
    try {
        const response = await fetch('/FishSmartProfile/ToggleSetting', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
            },
            body: JSON.stringify({
                setting: setting,
                enabled: enabled
            })
        });

        if (response.ok) {
            const result = await response.json();
            if (result.success) {
                // Update the status text
                const statusElement = document.getElementById(setting + 'Status');
                if (statusElement) {
                    statusElement.textContent = enabled ? 'On' : 'Off';
                }
                
                // Show success message
                showToast('Setting updated successfully!', 'success');
            } else {
                throw new Error(result.message || 'Failed to update setting');
            }
        } else {
            throw new Error('Network error');
        }
    } catch (error) {
        console.error('Error updating setting:', error);
        
        // Revert the toggle
        const toggle = document.getElementById(setting + 'Toggle');
        if (toggle) {
            toggle.checked = !enabled;
        }
        
        showToast('Failed to update setting. Please try again.', 'error');
    }
}

function showToast(message, type) {
    // Simple toast notification
    const toast = document.createElement('div');
    toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} position-fixed`;
    toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    toast.innerHTML = `
        ${message}
        <button type="button" class="btn-close" onclick="this.parentElement.remove()"></button>
    `;
    document.body.appendChild(toast);
    
    // Auto-remove after 3 seconds
    setTimeout(() => {
        if (toast.parentElement) {
            toast.remove();
        }
    }, 3000);
}
</script>

<!-- Add CSRF token for AJAX requests -->
@Html.AntiForgeryToken()

<!-- Toast auto-dismiss handled by global auto-dismiss-alerts.js -->